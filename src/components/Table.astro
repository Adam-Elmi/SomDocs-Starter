---
type Props = {
    headers: string[];
    body: { row: string[] }[];
};
const { headers, body } = Astro.props as Props;
---

<div class="overflow-auto max-h-[500px] rounded-xl shadow-md border border-gray-800">
  <table class="min-w-full border-collapse text-sm text-left text-gray-300 bg-[#0c0c0c]">
    <thead>
      <tr class="bg-[#121212] border-b border-gray-700 sticky top-0 z-10">
        {
          headers && headers.length > 0
            ? headers.map((header) => (
                <th class="px-4 py-3 font-semibold text-sm uppercase tracking-wide text-gray-400 bg-[#121212]">
                  {header}
                </th>
              ))
            : null
        }
      </tr>
    </thead>
    <tbody>
      {
        body && body.length > 0
          ? body.map((data, i) => (
              <tr class={i % 2 === 0 ? "bg-[#101010] hover:bg-[#161616]" : "bg-[#0f0f0f] hover:bg-[#161616]"}>
                {
                  data.row && data.row.length > 0
                    ? data.row.map((rowData) => (
                        <td class="px-4 py-3 border-b border-gray-800 whitespace-nowrap">
                          {rowData}
                        </td>
                      ))
                    : null
                }
              </tr>
            ))
          : null
      }
    </tbody>
  </table>
</div>
